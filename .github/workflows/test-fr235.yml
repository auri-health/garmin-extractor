name: Test Forerunner 235 Extraction

# Workflow for testing Forerunner 235 specific data extraction
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18'

jobs:
  test-fr235:
    runs-on: ubuntu-latest
    
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      USER_ID: ${{ secrets.USER_ID }}
      GARMIN_USERNAME: ${{ secrets.GARMIN_USERNAME }}
      GARMIN_PASSWORD: ${{ secrets.GARMIN_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
    
      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci
          
          # Install global dev dependencies
          echo "Installing global dev dependencies..."
          npm install -g typescript@4.9.0 ts-node@10.0.0 @typescript-eslint/parser@7.0.0 @typescript-eslint/eslint-plugin@7.0.0 eslint@8.56.0 jest@29.0.0

      - name: Build TypeScript
        run: |
          echo "Building TypeScript..."
          npm run build

      - name: Run Forerunner 235 extraction test
        id: extraction
        run: |
          echo "Starting Forerunner 235 extraction test..."
          
          # Create directories
          mkdir -p data
          mkdir -p logs
          
          # Run the extractor with debug logging
          DEBUG=garmin-extractor:* node dist/index.js --device=fr235 --debug 2>&1 | tee logs/extraction.log
        continue-on-error: true
        
      - name: Check extraction results
        if: always()
        run: |
          echo "Checking extraction results..."
          
          # Check if data directory exists
          if [ ! -d "data" ]; then
            echo "::error::Data directory not found!"
            exit 1
          fi
          
          # Define expected files
          expected_files=(
            "user-profile.json"
            "heart-rate-*.json"
            "sleep-*.json"
            "steps-*.json"
            "activities-*.json"
          )
          
          # Check for expected files
          missing_files=0
          for pattern in "${expected_files[@]}"; do
            if ! ls data/$pattern 1> /dev/null 2>&1; then
              echo "::error::Missing expected file pattern: $pattern"
              missing_files=$((missing_files + 1))
            else
              echo "Found files matching pattern: $pattern"
              ls -l data/$pattern
            fi
          done
          
          if [ $missing_files -gt 0 ]; then
            echo "::error::Missing $missing_files expected file patterns"
            exit 1
          fi
          
          # Validate JSON files
          echo "Validating JSON files..."
          for file in data/*.json; do
            if [ -f "$file" ]; then
              if ! jq empty "$file" 2>/dev/null; then
                echo "::error::Invalid JSON in file: $file"
                exit 1
              fi
            fi
          done
          
          # Check file contents for Forerunner 235 specific validation
          invalid_files=0
          for file in data/heart-rate-*.json; do
            if [ -f "$file" ] && grep -q "hrvStatus\|bodyBattery\|pulseOx" "$file"; then
              echo "::error::Found unsupported fields in $file"
              invalid_files=$((invalid_files + 1))
            fi
          done
          
          if [ $invalid_files -gt 0 ]; then
            echo "::error::Found $invalid_files files with invalid fields"
            exit 1
          fi
          
          echo "All extraction tests passed successfully!"

      - name: Upload extraction results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fr235-extraction-results
          path: |
            data/
            logs/
          retention-days: 5 